{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WallPanel","text":"<p>\ud83d\uddbc\ufe0f Wall panel mode for your Home Assistant Dashboards.</p> <p>WallPanel is a configurable extension that features:</p> <ul> <li>Photo and video slideshow screensaver</li> <li>Show dashboard views, cards and badges of your choice on top of the images.</li> <li>Full-screen mode</li> <li>Hide the side and or top bar </li> <li>Screen wake lock</li> <li>Motion detection</li> </ul> <p>You can use images and videos from the following sources:</p> <ul> <li>Home Assistant Media-source</li> <li>Immich</li> <li>Unsplash</li> <li>Home Assitant entities with entity_picture attribute</li> <li>Full websites as iframe</li> <li>Embed external content</li> </ul> <p></p>"},{"location":"additional-resources/","title":"Additional Resources","text":"<p>If you need more assistance on the topic, please have a look at the following external resources:</p>"},{"location":"additional-resources/#reviews-tutorials","title":"Reviews / Tutorials","text":"<ul> <li>SmartHomeScene - WallPanel: Home Assistant Screensaver for your wall-mounted control panel</li> <li>Smart Home Pursuites - Install Fully-Kiosk + Wallpanel in Home Assistant for Fire Tablets</li> </ul>"},{"location":"additional-resources/#videos","title":"Videos","text":"<ul> <li>YouTube: Next Level Tablet Dashboard \ud83c\udf05 mit lovelace-wallpanel \ud83e\udd29 (\ud83c\udde9\ud83c\uddea)</li> <li>YouTube: So wird dein Home Assistant Wallpanel zum Kunstobjekt! (\ud83c\udde9\ud83c\uddea)</li> </ul>"},{"location":"browser-mod/","title":"Integration with Browser Mod","text":"<p>Normally, it is not possible to set different configuration for different devices. That gap can be closed by integrating WallPanel with Browser Mod.</p> <p>Install Browser Mod to get started.</p> <p>Once Browser Mod is correctly installed and configured, thr Browser ID can be used to define per-device settings. The placeholders <code>${browser_id}</code> can be used everywhere in the configuration and will be replaced by the Browser ID. Minus signs in the browser ID are replaced by underscores.</p>"},{"location":"browser-mod/#activate-wallpanel-on-individual-devices-only","title":"Activate WallPanel on individual devices only","text":"<p>Set <code>enabled</code> to false and add a device-specific profile to enable the wallpanel only on the device in your dashboard configuration:</p> <pre><code>wallpanel:\n  enabled: false\n  profiles:\n    device.&lt;browser-id&gt;:\n      enabled: true\n</code></pre> <p>Example for Browser-ID e9a2c86e-5526f1ee: <pre><code>wallpanel:\n  enabled: false\n  profiles:\n    device.e9a2c86e_5526f1ee:\n      enabled: true\n</code></pre></p>"},{"location":"browser-mod/#device-specific-profile","title":"Device specific profile","text":"<p>A separate profile can be defined for each device:</p> <pre><code>wallpanel:\n  enabled: true\n  media_order: random\n  profiles:\n    device.e9a2c86e_5526f1ee:\n      image_url: media-source://media_source/local/kitchen\n      screensaver_entity: input_boolean.screensaver_kitchen\n    device.89ae788b_cd883eb1:\n      image_url: media-source://media_source/local/livingroom\n      screensaver_entity: input_boolean.screensaver_livingroom\n</code></pre> <p>Info</p> <p>It is not required to define profiles for all devices.</p>"},{"location":"browser-mod/#placeholder-browser_id","title":"Placeholder ${browser_id}","text":"<p>If only individual configuration attributes are to be device-specific, this can be achieved by using the placeholder without having to create an entire profile for the device.</p> <p>For example, a separate screensaver entity for each device:</p> <pre><code>wallpanel:\n  enabled: true\n  screensaver_entity: input_boolean.screensaver_${browser_id}\n</code></pre> <p><code>${browser_id}</code> will be replaced with the value of Browser ID (eg. <code>input_boolean.screensaver_e9a2c86e_5526f1ee</code>).</p> <p>Example for a device-specific profile entity using the <code>${browser_id}</code> placeholder:</p> <pre><code>wallpanel:\n  enabled: true\n  profiles:\n    dogs:\n      image_url: https://source.unsplash.com/random/${width}x${height}?dogs&amp;sig=${timestamp}\n    cats:\n      image_url: https://source.unsplash.com/random/${width}x${height}?cats&amp;sig=${timestamp}\n  profile_entity: input_text.screensaver_profile_${browser_id}\n</code></pre>"},{"location":"browser-mod/#browser-mod-popups","title":"Browser Mod popups","text":"<p>You can use the configuration option <code>disable_screensaver_on_browser_mod_popup_func</code> to conditionally disable the screensaver based on the active browser mod popup. Use the variable <code>bmp</code> to select the popup element.</p> <p>As an example, this javascript will only disable the screensaver if the active browser mod popup contains a <code>webrtc-camera</code> card:</p> <pre><code>wallpanel:\n  disable_screensaver_on_browser_mod_popup_func: |\n    let elements = bmp.shadowRoot.querySelector(\".container\").children;\n    return Array.from(elements).some(n =&gt; n.nodeName.toLowerCase() === \"webrtc-camera\");\n</code></pre>"},{"location":"browser-mod/#browser-mod-service","title":"Browser Mod service","text":"<p>You can stop the screensaver with the javascript code below from a browser mod service.</p> <pre><code>document.querySelector(\"home-assistant\").shadowRoot.querySelector(\"home-assistant-main\").shadowRoot.querySelector(\"wallpanel-view\").stopScreensaver();\n</code></pre>"},{"location":"camera-motion-detection/","title":"Camera motion detection","text":"<p>This function detects movement by analyzing changes in the images captured by a camera installed in the device and pauses the screen saver when movement is detected. An HTTPS connection to the Home Assistant is required to enable access to the camera.</p> <p>For Fully Kiosk Browser, enable \"Enable Webcam Access (PLUS)\" in <code>Web Content Settings</code>.</p>"},{"location":"camera-motion-detection/#configuration","title":"Configuration","text":"<ul> <li>Set <code>camera_motion_detection_enabled</code> to <code>true</code> to enable motion detection.</li> <li>Use <code>camera_motion_detection_facing_mode</code> (<code>user</code>, <code>environment</code>, <code>left</code> or <code>right</code>) to configure which camera should be used (default: <code>user</code>).</li> <li>With <code>camera_motion_detection_threshold</code> the percentage of changed pixels required for detection can be defined (default: <code>5</code>).</li> <li>The resolution of the video recording can be configured via <code>camera_motion_detection_capture_width</code> (default: <code>64</code>) and <code>camera_motion_detection_capture_height</code> (default: <code>48</code>). Higher values improve accuracy but increase CPU utilization.</li> <li>The time interval between two captured images can be set via <code>camera_motion_detection_capture_interval</code> (in seconds, default: <code>0.3</code>). Lower values detect movements faster, but consume more CPU.</li> <li>For troubleshooting, set <code>camera_motion_detection_capture_visible</code> to <code>true</code> to display the captured images in the user interface.</li> </ul>"},{"location":"configuration/","title":"Configuration","text":"<p>You can set the following configuration parameters for every individual Home Assistant Dashboard:</p> Config Description Default enabled Enable WallPanel? You will need to set this to true to activate the wall panel for the dashboard. false enabled_on_views Enable WallPanel on the named views (path) only. See Enable WallPanel on specific Views for details. [] debug Enable debug mode? false wait_for_browser_mod_time How long to wait for browser_mod to be available (in seconds)? This config attribute can only be set in the main configuration and not in profiles, user-specific or device-specific. 0.25 log_level_console Log level to use for logging to the browser console (error / warning / info / debug). info log_level_system Log level to use for logging to the HA system log (error / warning / info / debug). warning system_target_log_level Always use this log level when logging to the HA system log (error / warning / info / debug). alert_errors Display error messages in an alert box. true hide_toolbar Hide the upper panel toolbar? Please see FAQ how to edit your dashboard when toolbar is hidden. false hide_toolbar_on_subviews Hide the toolbar in subviews too? false keep_toolbar_space If the toolbar is hidden, should the space where the toolbar is normally located remain empty? false hide_toolbar_action_icons Hide action items in the toolbar? false hide_sidebar Hide the navigation sidebar? false fullscreen Set browser window to fullscreen? Due to browser restrictions you will need to interact with the screen once to activate fullscreen mode after loading the dashboard page. false keep_fullscreen Keep fullscreen active if the wallpanel is deactivated, for instance when disabled in a view. true z_index Wallpanels base CSS z-index. 1000 idle_time Time in seconds after which the screensaver will start (0 = screensaver disabled). 15 fade_in_time Screensaver fade-in time in seconds. 3.0 fade_out_time_motion_detected Screensaver fade-out time in seconds when the screensaver is stopped because motion is detected. 1.0 fade_out_time_screensaver_entity Screensaver fade-out time in seconds when the screensaver is turned off by the screensaver entity. 3.0 fade_out_time_browser_mod_popup Screensaver fade-out time in seconds when the screensaver is stopped because of an browser mod popup. 1.0 fade_out_time_interaction Screensaver fade-out time in seconds when the screensaver is stopped because of user input. 0.3 crossfade_time Crossfade duration in seconds for screensaver images. 3.0 display_time Duration in seconds after which the next screensaver image will be shown. 15.0 keep_screen_on_time Time in seconds for how long to prevent screen to dimm or lock (0 = disabled). 0 black_screen_after_time Time in seconds after which the screensaver will show just a black screen (0 = disabled). 0 control_reactivation_time Time in seconds for which interaction with the dashboard is disabled after the screensaver is stopped. 1.0 stop_screensaver_on_mouse_move Stop screensaver on mouse movement? true stop_screensaver_on_mouse_click Stop screensaver on mouse click / display touch? true stop_screensaver_on_location_change Stop screensaver on navigation (location-changed events)? true stop_screensaver_on_key_down Stop screensaver on key press? true disable_screensaver_on_browser_mod_popup Disable screensaver if a browser mod popup is active? false disable_screensaver_on_browser_mod_popup_func Javascript function to determine whether to disable screensaver based on active browser mod popup (see Browser Mod Popups) disable_screensaver_when_assist_active Disable screensaver if assist dialog is active? true screensaver_start_navigation_path Path to navigate to (e.g., /lovelace/default_view) when screensaver is started. Use a complete path to avoid redirects which will stop the screensaver. screensaver_stop_close_browser_mod_popup Close the active browser mod popup when screensaver is stopped? false screensaver_entity An entity of type 'input_boolean' to reflect and change the screensaver state (on = started, off = stopped). If browser_mod is installed, <code>${browser_id}</code> will be replaced with Browser ID (see Browser Mod). show_images Show images if screensaver is active? true image_url Fetch screensaver media files from this URL. See Media Sources for details. See Media Sources force_load_media_with_fetch Enforce media loading through <code>fetch()</code> instead of setting the elements <code>src</code> attribute. false image_url_entity An entity of type 'input_text' in which the URL of the current screen saver image is stored. If browser_mod is installed, <code>${browser_id}</code> will be replaced with Browser ID (see Browser Mod). media_entity_load_unchanged Should a new image be fetched from the entity after the display time has expired, even if the entity's state remains unchanged? true iframe_load_unchanged Should an iframe be reloaded once its display time has expired, even if its URL remains the same? false iframe_interaction Allow interaction with the iframe content? false immich_api_key API key that is used for authentication at the immich API immich_shared_albums Show images of shared immich albums? true immich_album_names Only show images from these immich albums. [] immich_tag_names Only show images with this tags. [] immich_persons Only show images with this persons. [] immich_memories Only show today memories. false immich_resolution The resolution to use for loading images from immich (possible values are: <code>preview</code> / <code>original</code>). preview exclude_filenames List of regular expressions for excluding files and directories from media sources. See Media Sources for details. [] exclude_media_types List of media types to exlcude media sources. See Media Sources for details. [] exclude_media_orientation Media orientation to exlcude. See Media Sources for details. image_fit_landscape How to adjust a media item in landscape mode to fit the available space (cover or contain). cover image_fit_portrait How to adjust a media item in portrait mode to fit the available space (cover or contain). contain media_horizontal_align Determines how media items are aligned horizontally on the screen (left, center, or right). center caclulate_media_size Calculate media container sizes. true image_background Possible values are <code>color</code> and <code>image</code>. When set to <code>image</code>, a snapshot from the current media item is used as the background, covering the entire screen. To customize its appearance, apply styles using the <code>wallpanel-screensaver-image-background</code> class. color media_list_update_interval When using a local media source, the media list is updated at this interval. 3600 media_list_max_size The maximum number of media items to fetch from the media source. 500 media_order The order in which the images are displayed (possible values are: sorted / random). random image_animation_ken_burns Apply a Ken Burns effect (panning and zooming) to the images? false image_animation_ken_burns_zoom Zoom level for the Ken Burns effect. 1.3 image_animation_ken_burns_delay Start Ken Burns effect with a delay (in seconds). 0 image_animation_ken_burns_duration Specifies the duration of the Ken Burns effect in seconds. If set to 0, the <code>display_time</code> value is used instead. 0 video_loop Loop video until <code>display_time</code> is reached? Otherwise, immediately switch to the next media at the end of the video playback. false video_volume Volume of videos being played (0=0%, 1=100%). 0.0 show_image_info Show image info (EXIF / API) on top of image? Only available for local jpeg images containing EXIF data and images from the new Unsplash API. The config name was <code>show_exif_info</code> before version 4.7. false show_progress_bar Show animated progress bar towards next image being displayed? false fetch_address_data Fetch address data for EXIF GPS coordinates from nominatim.openstreetmap.org? false image_info_template Format of image info display (HTML). ${EXIF-tag-name} will be replaced with the corresponding EXIF tag value. The config name was <code>exif_info_template</code> before version 4.7. ${DateTimeOriginal} touch_zone_size_next_image Size of the area on the right side of the screen at which a click will show the next image (as a percentage of the total screen width, 0 = disabled). 15 touch_zone_size_previous_image Size of the area on the left side of the screen at which a click will show the previous image (as a percentage of the total screen width, 0 = disabled). 15 info_animation_duration_x Animation duration in seconds for the movement of the info box in x-direction (0 = no animation). 0 info_animation_duration_y Animation duration in seconds for the movement of the info box in y-direction (0 = no animation). 0 info_animation_timing_function_x The CSS timing-function to use for the animation of the info box movement in x-direction. ease info_animation_timing_function_y The CSS timing-function to use for the animation of the info box movement in y-direction. ease info_move_pattern Movement pattern of the info box at a specified interval (possible values are: random / corners). random info_move_interval Interval of movement of the info box in seconds (0 = no movement). 0 info_move_fade_duration Duration of the fade-in and fade-out animation of the info box in case of movement (0 = no animation). 2.0 style Additional CSS styles for WallPanel elements. {} badges Badges to display in info box. Set to [] to show no badges at all. See Badges for details. [] cards Cards to display in info box. Set to [] to show no cards at all. See Cards for details. [] views Dashboard views to display in info box. Set to [] to show no views at all. See Views for details. [] content_interaction Allow interaction with the elements displayed in the info box? false profiles See Configuration profiles for details. {} profile Configuration profile to activate. If browser_mod is installed, <code>${browser_id}</code> will be replaced with Browser ID (see Browser Mod). profile_entity An entity of type 'input_text' used for dynamic activation of profiles. If browser_mod is installed, <code>${browser_id}</code> will be replaced with Browser ID (see Browser Mod). camera_motion_detection_enabled Activate camera based motion detection? Screensaver is stopped when movement is detected See Camera motion detection for details. false camera_motion_detection_facing_mode Which camera to use (user / environment / left / right). user camera_motion_detection_threshold If this many percent of the pixels change between two images, this is counted as movement. 5 camera_motion_detection_capture_width Width of the images captured by the camera in pixels. 64 camera_motion_detection_capture_height Height of the images captured by the camera in pixels. 48 camera_motion_detection_capture_interval Interval in seconds at which images are captured by the camera. 0.3 camera_motion_detection_capture_visible Should the captured images be displayed on the user interface for debugging? false"},{"location":"configuration/#home-assistant-dashboard-configuration","title":"Home Assistant Dashboard configuration","text":"<p>You can add the configuration to your Home Assistant Dashboard configuration yaml (raw config).</p> <ul> <li>Click Overview in your sidebar.</li> <li>Click the three dots menu (top-right) and click on Edit Dashboard.</li> <li>Click the three dots menu again and click on Raw configuration editor.</li> <li>Add the <code>wallpanel</code> configuration above anything else.</li> </ul> <p>Short example: <pre><code>wallpanel:\n  enabled: true\n  hide_toolbar: true\n  hide_sidebar: true\n  fullscreen: true\n</code></pre></p> <p>Extended example: <pre><code>wallpanel:\n  enabled: true\n  enabled_on_views:\n    - default_view\n  debug: false\n  hide_toolbar: true\n  hide_sidebar: true\n  fullscreen: true\n  idle_time: 10\n  keep_screen_on_time: 86400\n  black_screen_after_time: 7200\n  control_reactivation_time: 1.0\n  screensaver_start_navigation_path: /lovelace/default_view\n  image_url: 'http://picsum.photos/${width}/${height}?random=${timestamp}'\n  image_fit_landscape: cover\n  media_list_update_interval: 3600\n  media_order: 'sorted'\n  image_excludes: []\n  show_image_info: false\n  fetch_address_data: true\n  image_info_template: '${address.town|address.city!prefix=!suffix= // }${DateTimeOriginal!options=year:numeric,month:long}'\n  screensaver_entity: input_boolean.wallpanel_screensaver\n  info_animation_duration_x: 30\n  info_animation_duration_y: 11\n  info_animation_timing_function_x: 'ease-in-out'\n  info_animation_timing_function_y: 'ease-in-out'\n  info_move_pattern: random\n  info_move_interval: 0\n  info_move_fade_duration: 2.0\n  content_interaction: true\n  style:\n    wallpanel-screensaver-info-box:\n      font-size: 8vh\n      font-weight: 600\n      color: '#eeeeee'\n      text-shadow: '-2px -2px 0 #03a9f4, 2px -2px 0 #03a9f4, -2px 2px 0 #03a9f4, 2px 2px 0 #03a9f4'\n</code></pre></p>"},{"location":"configuration/#url-query-parameters","title":"URL query parameters","text":"<p>It is also possible to pass configuration parameters in the query string. These parameters (wp_&lt;parameter&gt;) will override the corresponding properties in the yaml configuration. Use JSON syntax for the values.</p> <p>Example: <code>http://hass:8123/lovelace/default_view?wp_hide_sidebar=false</code></p> <p>Info</p> <p>Please note that the URL parameters may be lost when navigating in the Home Assistant interface. Therefore, this option should not normally be used.</p>"},{"location":"configuration/#dynamic-configuration-using-placeholders","title":"Dynamic configuration using placeholders","text":"<p>The WallPanel configuration can be changed dynamically by using input_text or input_select helpers. Placeholders can be used in the yaml configuration, which are replaced by the state value of the corresponding entity. These placeholders have the form <code>${entity:&lt;entity-id&gt;}</code>, where <code>&lt;entity-id&gt;</code> must be replaced by the ID of an existing HA entity. Whenever the state of such an entity changes, the configuration is updated immediately.</p> <p>For the example, an input_select helper named <code>wallpanel_image_url</code> must be created in HA. The enity ID of the helper will be <code>input_select.wallpanel_image_url</code> by default. A placeholder can now be inserted in the yaml configuration: <pre><code>wallpanel:\n  image_url: '${entity:input_select.wallpanel_image_url}'\n</code></pre> Whenever the state of the entity is changed manually or by automation, the configuration is updated accordingly.</p> <p>It is also possible to dynamically change only a part of the configuration value: <pre><code>wallpanel:\n  image_url: 'https://api.unsplash.com/photos/random?client_id=YOUR_ACCESS_KEY&amp;query=${entity:input_text.wallpanel_unsplash_query}'\n</code></pre></p> <p>If Browser Mod is available, you can also use the <code>${browser_id}</code> placeholder: <pre><code>wallpanel:\n  screensaver_entity: input_boolean.${browser_id}_wallpanel_screensaver\n</code></pre> See Browser Mod - Placeholder ${browser_id} for details.</p>"},{"location":"configuration/#profiles","title":"Profiles","text":"<p>With profiles you can easily switch between different configurations. Each profile is defined under the <code>profiles</code> attribute, while settings outside of a profile serve as the default configuration.</p> <p>Example</p> <pre><code>wallpanel:\n  enabled: true\n  idle_time: 60\n  style:\n    wallpanel-screensaver-overlay:\n      background: '#00000000'\n  profiles:\n    night:\n      idle_time: 5\n      style:\n        wallpanel-screensaver-overlay:\n          background: '#000000bb'\n    black:\n      black_screen_after_time: 1\n    user.jane:\n      enabled: false\n    device.e9a2c86e_5526f1ee:\n      idle_time: 25\n      screensaver_entity: input_boolean.kitchen_wallpanel_screensaver\n</code></pre> <p>In this example, there are four additional profiles: <code>night</code>, <code>black</code>, <code>user.jane</code> and <code>device.e9a2c86e_5526f1ee</code>. When a profile is activated, its settings override the default configuration.</p>"},{"location":"configuration/#activating-a-profile","title":"Activating a Profile","text":"<p>There are several ways to activate a profile:</p> <p>1. Automatic Activation for User Profiles</p> <p>A user profile is automatically applied if it matches the logged-in user.</p> <ul> <li>The name of a user profile must begin with <code>user.</code>, followed by a user ID or display name (usernames are not supported).</li> <li>The display name of the logged-in user is converted to lowercase, and spaces are replaced with underscores (<code>_</code>). For example, <code>Jane Doe</code> would be converted to <code>jane_doe</code>.</li> </ul> <p>Tip</p> <p>The ID of a user can be found when you click on a user entry in Settings =&gt; Persons =&gt; Users</p> <p>2. Automatic Activation for Device Profiles</p> <p>A device profile is activated if it matches the Browser Mod Browser ID.</p> <ul> <li>The profile name must begin with <code>device.</code>, followed by the Browser ID configured in Browser Mod.</li> <li>Any hyphens (<code>-</code>) in the Browser ID are replaced with underscores (<code>_</code>).</li> </ul> <p>For more details, refer to Integration with Browser Mod.</p> <p>3. Dynamic Activation via an Input Helper</p> <p>Profiles can be dynamically switched using an <code>input_text</code> or <code>input_select</code> helper.</p> <ul> <li>In the example, an <code>input_text</code> helper named <code>wallpanel_profile</code> must be created in Home Assistant.</li> <li>The profile can then be changed by updating <code>input_text.wallpanel_profile</code> manually or through automation (e.g., based on time).</li> <li>Setting it to a valid profile name applies that profile immediately. Any value that does not match a defined profile will revert to the default settings.</li> </ul> <pre><code>wallpanel:\n  profile_entity: input_text.wallpanel_profile\n</code></pre> <p>4. Manual Activation via Configuration</p> <p>You can specify a profile directly in the wallpanel configuration, although this method is rarely needed.</p> <pre><code>wallpanel:\n  profile: night\n</code></pre> <p>5. Activation via Query String Parameter</p> <p>A profile can be selected using a URL parameter: <code>http://hass:8123/lovelace/default_view?wp_profile=night</code></p>"},{"location":"configuration/#enable-wallpanel-on-specific-views","title":"Enable WallPanel on specific Views","text":"<p>To enable WallPanel only on specific views, use the <code>enabled_on_views</code> configuration option.</p> <p>This option accepts a list of view paths where WallPanel should be active. You can find the path in your dashboard\u2019s YAML configuration or directly from the browser URL.</p> <p>For example, in the URL below, the path of the view is <code>1</code>:</p> <pre><code>https://hass:8123/dashboard-test/1\n</code></pre> <p>If you leave the list empty, WallPanel will be enabled on all views by default.</p>"},{"location":"credits/","title":"Credits","text":"<p>Thanks to Unsplash and to all the photographers for sharing their great photos! Many thanks to Openstreetmap for providing the excellent Nominatim search engine! Thanks to Jacob Seidelin for exif-js!</p> <p>This project is inspired by:</p> <ul> <li>https://github.com/tcarlsen/lovelace-screensaver</li> <li>https://gist.github.com/ciotlosm/1f09b330aa5bd5ea87b59f33609cc931</li> <li>https://github.com/richtr/NoSleep.js</li> <li>https://github.com/madeInLagny/mil-no-sleep</li> </ul>"},{"location":"faq/","title":"FAQ - Frequently Asked Questions","text":""},{"location":"faq/#dashboard-cannot-be-edited","title":"Dashboard cannot be edited","text":"<p>After hiding the toolbar, I can no longer edit the dashboard. How can I recover?</p> <p>If you add <code>?edit=1</code> or <code>?wp_enabled=false</code> to the URL in the browser, WallPanel will not be active, so the toolbar will not be hidden either. You can also use <code>?wp_hide_toolbar=false</code> to only change this setting.</p> <p>Example: <code>http://192.168.1.1:8123/lovelace/default_view?wp_enabled=false</code></p>"},{"location":"info-box/","title":"Info Box","text":"<p>A so-called Info Box can be displayed above the images. You can add badges, cards and whole dashboard views to this box.</p> <p>If you want to interact with the elements of the Info Box, as in the dashboard, you can set <code>content_interaction</code> to <code>true</code>.</p> <pre><code>wallpanel:\n  content_interaction: true\n</code></pre>"},{"location":"info-box/#badges","title":"Badges","text":"<p>For Badges you can use the same yaml config, as used in the Home Assistant Dashboard configuration (raw config).</p> <p>Example for Badges: <pre><code>wallpanel:\n  badges:\n    - entity: person.somebody\n    - entity: sun.sun\n</code></pre></p>"},{"location":"info-box/#cards","title":"Cards","text":"<p>For Cards you can also use the same yaml config.</p> <p>Example for Cards: <pre><code>wallpanel:\n  cards:\n    - type: weather-forecast\n      entity: weather.home\n      show_forecast: true\n      forecast_type: daily\n</code></pre></p>"},{"location":"info-box/#positioning","title":"Positioning","text":"<p>The cards and badges are positionend by a Grid_Layout.</p> <p>Example</p> <p><pre><code>  cards:\n    - type: markdown\n      content: Card 1\n      wp_style:\n        width: 810px\n        grid-row: 1\n        grid-column: 1 / span 2\n    - type: markdown\n      content: Card 2\n      wp_style:\n        width: 400px\n        grid-row: 2\n        grid-column: 2\n    - type: markdown\n      content: Card 3\n      wp_style:\n        width: 400px\n        grid-row: 3\n        grid-column: 1\n    - type: markdown\n      content: Card 4\n      wp_style:\n        width: 400px\n        grid-row: 3\n        grid-column: 2\n</code></pre> </p>"},{"location":"info-box/#views","title":"Views","text":"<p>You can also display entire Dashboard Views in the info box. The Views or Subviews you want to use can be referenced by their <code>path</code> or <code>title</code>.</p> <p>For example, you can create a subview in your dashboard with the title <code>Wallpanel</code>. You can then reference the view in the wallpanel configuration:</p> <pre><code>wallpanel:\n  views:\n    - title: Wallpanel\n</code></pre> <p>The width of the view can be adjusted using CSS. The following example uses 80 % of the available width of the viewport:</p> <pre><code>wallpanel:\n  views:\n    - title: Wallpanel\n  style:\n    wallpanel-screensaver-info-box-views:\n      width: 80vw\n</code></pre> <p>You can also make the content bigger if required. For example, enlarge it by 20 %: <pre><code>wallpanel:\n  views:\n    - title: Wallpanel\n  style:\n    wallpanel-screensaver-info-box-views:\n      transform: scale(1.2)\n      transform-origin: top center\n</code></pre></p> <p>To utilize the full screen width and height for one single view and remove any extra padding, apply the following: <pre><code>wallpanel:\n  views:\n    - title: Wallpanel\n      wp_style:\n        height: 100vh\n        width: 100vw\n  style:\n    wallpanel-screensaver-info-container:\n      padding: 0px\n    wallpanel-screensaver-info-box-views:\n      width: 100vw\n      height: 100vh\n</code></pre></p>"},{"location":"info-box/#info-box-animation","title":"Info Box animation","text":"<p>The info box, which contains the cards and badges, can be animated and moved around the screen using CSS animations. The following settings can be used to configure the animation:</p> <p>info_animation_duration_x: How long it will take in seconds to move the info box from one end of the screen to the other in x-direction. If set to 0, animation in x-direction will be disabled.</p> <p>info_animation_duration_y: Same as above, but in y-direction.</p> <p>The style of the animation can be configured with info_animation_timing_function_x for x-direction and info_animation_timing_function_y for the y-direction using a CSS animation-timing-function.</p> <p>Possible values are, for example, ease and linear. For details, please have a look at MDN - CSS animation-timing-function.</p> <p>An example of a nice animated movement using the Easing function:</p> <pre><code>info_animation_duration_x: 30\ninfo_animation_duration_y: 13\ninfo_animation_timing_function_x: ease-in-out\ninfo_animation_timing_function_y: ease-in-out\n</code></pre> <p>Be aware that animations increase CPU/GPU usage and power consumption.</p> <p>A timing function that requires few resources is the step function (<code>steps(&lt;number-of-steps&gt; [, &lt;step-position&gt; ])</code>). You can play with the number of steps to achieve the desired result. Here is one example in combination with duration settings:</p> <p><pre><code>info_animation_duration_x: 10\ninfo_animation_duration_y: 20\ninfo_animation_timing_function_x: steps(3, end)\ninfo_animation_timing_function_y: steps(3, end)\n</code></pre> Fewer steps and higher duration will result in fewer movements and lower resource consumption.</p> <p>In addition, it is possible to move the info box to a random position on the screen or around corners of the screen (ie. top left, bottom left, bottom right, top right, and so forth), at a fixed time interval.</p> <p>Example</p> <pre><code>info_move_pattern: random\ninfo_move_interval: 10\ninfo_move_fade_duration: 2.0\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>The recommended way is to install this plugin using HACS.</p>"},{"location":"installation/#hacs-installation","title":"HACS Installation","text":"<ul> <li>Search for <code>WallPanel</code> in the Home Assistant Community Store</li> <li>Click on the repository</li> <li>Click the <code>Download</code> button</li> <li>You can now select a special version if required</li> <li>Click on <code>Download</code></li> </ul>"},{"location":"installation/#manual-upgrade-of-a-version-installed-via-hacs","title":"Manual upgrade of a version installed via HACS","text":"<ul> <li>Download <code>wallpanel.js</code> from the WallPanel releases page or the latest version from here.</li> <li>Place it into <code>config/www/community/lovelace-wallpanel/wallpanel.js</code></li> <li>Make sure you delete the <code>wallpanel.js.gz</code> file if it is in the same directory.</li> <li>Open Settings =&gt; Lovelace Dashboards =&gt; Resources and add search for <code>wallpanel.js</code>.</li> <li>Edit the resource</li> <li>Change the hacstag part of the URL (just change the number to a value that has never been used before).</li> </ul>"},{"location":"installation/#manual-installation-and-upgrade","title":"Manual installation and upgrade","text":"<ul> <li>Download <code>wallpanel.js</code> from the WallPanel releases page and place it into the folder config/www.</li> <li>Be sure to delete the wallpanel.js.gz file if it is in the same directory.</li> <li>Open Settings =&gt; Lovelace Dashboards =&gt; Resources and add /local/wallpanel.js (Resource type: JavaScript module).</li> </ul> <p>After a manual upgrade to a newer version, you should change the URL of the resource so that browsers are forced to reload the resource. You can add a query string such as ?v2 to the URL or change it: /local/wallpanel.js?v2.</p>"},{"location":"media-info/","title":"Media Info","text":"<p>You can show infos regarding the displayed media in the screesaver. The media info is available for Local Media Sources, Immich Integration and some image entities. Set the configuration opttion <code>show_image_info</code> to <code>true</code> to activate this feature.</p> <p>The image info can be formatted by specifying HTML code in <code>image_info_template</code>. Placeholders like <code>${EXIF-tag-name}</code> will be replaced with the corresponding EXIF tag value. See exif.js for available EXIF tag names.</p> <p>If the EXIF data contains GPS location information and the <code>fetch_address_data</code> configuration is set to <code>true</code>, address data for the GPS coordinates will be fetched from <code>nominatim.openstreetmap.org</code>. The received address data can be used via placeholders in the form <code>address.&lt;attribute&gt;</code>. Available attributes are: <code>country</code>, <code>country_code</code>, <code>county</code>, <code>municipality</code>, <code>postcode</code>, <code>region</code>, <code>road</code>, <code>state</code>, <code>city</code>, <code>town</code> and <code>village</code>. See Nominatim Reverse Geocoding for details. Please respect the Nominatim Usage Policy.</p> <p>If you specify multiple alternative values separated by a pipe symbol (<code>|</code>), the first available attribute is used.</p> <p>A prefix and suffix string can be added for each placeholder. Prefix and suffix are not displayed if the placeholder value is empty.</p> <p>For date values you can specify date format options. Each option must consist of an <code>&lt;option name&gt;:&lt;option value&gt;</code> pair. Multiple options must be separated by commas. Available option names are: <code>year</code>, <code>month</code>, <code>day</code>, <code>weekday</code>, <code>hour</code>, <code>minute</code> and <code>second</code>. Possible option values are: <code>long</code>, <code>short</code>, <code>narrow</code>, <code>numeric</code> and <code>2-digit</code>. See toLocaleDateString options for details.</p> <p>The following placeholders can also be used:</p> <ul> <li><code>image.url</code>: The full URL of the media item.</li> <li><code>image.path</code>: The complete path to the media item.</li> <li><code>image.relativePath</code>: The path to the current media item, relative to the <code>image_url</code> configuration parameter.</li> <li><code>image.folderName</code>: The name of the folder containing the media file.</li> <li><code>image.filename</code>: The name of the media file.</li> </ul> <p>Tip</p> <p>Set <code>image_info_template: analyze</code> to show all available attributes.</p> <p>Examples</p> <p>Display location and date <pre><code>show_image_info: true\nimage_info_template: '&lt;span style=\"color:#990000\"&gt;//&lt;/span&gt; ${address.town|address.city|address.municipality!prefix=!suffix= // }${DateTimeOriginal!options=year:numeric,month:long,day:2-digit}'\n</code></pre></p> <p>Display image path <pre><code>show_image_info: true\nimage_info_template: &gt;-\n    &lt;span style=\"font-family: 'Roboto Condensed', sans-serif; font-size: 1em; font-weight: 400; color: #999;\"&gt;\n      ${image.relativePath}\n    &lt;/span&gt;\n</code></pre></p> <p>The CSS class <code>wallpanel-screensaver-image-info</code> can be used to style the image info. See section \"Styles\".</p>"},{"location":"media-sources/","title":"Media sources","text":"<p>The media source for the screensaver slideshow is configured by <code>image_url</code>. This can be any HTTP URL, a Home Assistant media-source URL or a Home Assistant entity that has the <code>entity_picture</code> attribute.</p> <p>The default value of <code>image_url</code> is <code>http://picsum.photos/${width}/${height}?random=${timestamp}</code>.</p>"},{"location":"media-sources/#http-url","title":"HTTP URL","text":"<p>Media can be retrieved from an HTTP URL.</p> <p>The following variables can be used in HTTP URLs: - <code>${timestamp}</code> = current unix timestamp - <code>${width}</code> = viewport width - <code>${height}</code> = viewport height</p> <p>Example of using images from unsplash.com (old api):</p> <p><code>https://source.unsplash.com/random/${width}x${height}?sig=${timestamp}</code></p> <p>You can narrow down the images from unsplash.com using certain search terms, for example \"fruit\" and \"beer\".</p> <p><code>https://source.unsplash.com/random/${width}x${height}?fruit,beer&amp;sig=${timestamp}</code></p> <p>Example of using images from api.unsplash.com (new api):</p> <pre><code>media_order: random\nmedia_list_update_interval: 3600\nimage_url: https://api.unsplash.com/photos/random?client_id=YOUR_ACCESS_KEY&amp;query=dogs\nshow_image_info: true\nimage_info_template: '&lt;span style=\"color:#990000\"&gt;//&lt;/span&gt; ${description|alt_description}'\n</code></pre> <p>See Unsplash API documentation (Get a random photo) for details.</p>"},{"location":"media-sources/#local-media-source","title":"Local Media Source","text":"<p>It is also possible to use images from the Home Assistant Local Media Source. See Home Assistant Media Source integration documentation for details.</p> <p>If you are not sure which is the correct media source URL, you can proceed as follows:</p> <ol> <li>navigate to the folder you want to use in the HA Media Browser</li> <li>copy the displayed browser URL and decode it with a URL decoder tool. For example, you can use www.urldecoder.org.</li> <li>copy the part of the decoded URL after the last comma (<code>,</code>) that begins with <code>media-source://</code>.</li> </ol> <p>Instead of using <code>media-source://media_source/</code> as <code>image_url</code> you can just use <code>/</code> as a shortcut.</p> <ul> <li><code>/</code> = Images in all Local Media sources</li> <li><code>/media1</code> = Images in the Local Media directory named <code>media1</code></li> <li><code>/media1/folder1</code> = Images in <code>folder1</code> of the Local Media directory named <code>media1</code></li> </ul> <p>If you are using the Synology DSM integration, and want to use an Photo album from there you can use:</p> <p><code>media-source://synology_dsm/&lt;unique_id&gt;/&lt;album_id&gt;</code></p> <p><code>&lt;unique_id&gt;</code> is the Home Assistant ID for the NAS (usually the serial number of the NAS).</p> <p>For example:</p> <p><code>media-source://synology_dsm/18C0PEN253705/19</code></p>"},{"location":"media-sources/#exclude-files","title":"Exclude files","text":"<p>To exclude files and directories from a local media source, use the <code>exclude_filenames</code> configuration option. This option accepts a list of regular expressions. It was previously named <code>image_excludes</code>.</p> <p>Example <pre><code>exclude_filenames:\n  - '\\\\.tif$'\n  - '/@eaDir'\n</code></pre></p> <p>You can also exclude specific media types (currently image and video) using the <code>exclude_media_types</code> option. Example <pre><code>exclude_media_types:\n  - video\n</code></pre></p> <p>To exclude specific media orientations from being displayed, use the <code>exclude_media_orientation</code> configuration option. Valid values are: * <code>landscape</code>: excludes media in landscape format * <code>portrait</code>: excludes media in portrait format * <code>auto</code>: excludes media whose orientation does not match the screen orientation</p> <p>Note</p> <p>This option is currently only supported for the Immich media source.</p> <p>Example <pre><code>exclude_media_orientation: auto\n</code></pre></p>"},{"location":"media-sources/#media-entity","title":"Media Entity","text":""},{"location":"media-sources/#images","title":"Images","text":"<p>You can use an entity's <code>entity_picture</code> attribute as the media source for the screensaver. To do this, set the <code>image_url</code> to <code>media-entity-image://&lt;entity_id&gt;</code>, replacing <code>&lt;entity_id&gt;</code> with the actual entity ID.</p> <p>When the entity's state changes, a new image will automatically be displayed. A new image also loads after the specified <code>display_time</code> has passed. If you'd like to prevent image updates when the entity state remains the same, set <code>media_entity_load_unchanged</code> to <code>false</code>.</p> <p>Example:</p> <pre><code>display_time: 15\nimage_url: media-entity-image://camera.my_camera_entity_id\nmedia_entity_load_unchanged: true\n</code></pre>"},{"location":"media-sources/#video-stream","title":"Video Stream","text":"<p>If an entity provides a video stream, you can use it as the screensaver media source. To enable this, set <code>image_url</code> to <code>media-entity-video://&lt;entity_id&gt;</code>, replacing <code>&lt;entity_id&gt;</code> with the appropriate entity ID.</p> <p>Example:</p> <pre><code>image_url: media-entity-video://camera.my_camera_entity_id\nmedia_entity_load_unchanged: false\n</code></pre>"},{"location":"media-sources/#immich-api","title":"Immich API","text":"<p>Images and videos can be loaded from an Immich server, for which WallPanel accesses the Immich API.</p>"},{"location":"media-sources/#immich-server-cors","title":"Immich server CORS","text":"<p>Wallpanel sends direct requests to the Immich server via the browser, which enforces CORS (Cross-Origin Resource Sharing) as a security measure. Unfortunately, the Immich server does not support CORS configuration, and there are currently no plans to implement this.</p> <p>To work around this limitation, you'll need to set up a reverse proxy. The specific configuration will vary depending on the reverse proxy you choose to use.</p> <p>Here is a configuration example for nginx: <pre><code>if ($request_method = 'OPTIONS') {\n  add_header 'Access-Control-Allow-Origin' '*' always;\n  add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;\n  add_header 'Access-Control-Allow-Headers' 'X-Api-Key, User-Agent, Content-Type' always;\n  add_header 'Access-Control-Max-Age' 1728000;\n  add_header 'Content-Type' 'text/plain charset=UTF-8';\n  add_header 'Content-Length' 0;\n  return 204;\n}\nif ($request_method ~* '(GET|POST)') {\n    add_header 'Access-Control-Allow-Origin' '*' always;\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;\n    add_header 'Access-Control-Allow-Headers' 'X-Api-Key, User-Agent, Content-Type' always;\n    add_header 'Access-Control-Max-Age' 1728000;\n}\n</code></pre></p> <p>Note</p> <p>If you are using Nginx Proxy Manager add a custom location at root \"/\" and insert the configuration there.</p> <p>For Traefik, you can use:</p> <pre><code>traefik.http.middlewares.immich-cors.headers.accessControlAllowOriginList=*\ntraefik.http.middlewares.immich-cors.headers.accessControlAllowMethods=GET, PUT, POST, DELETE, OPTIONS\ntraefik.http.middlewares.immich-cors.headers.accessControlAllowHeaders=X-Api-Key, User-Agent, Content-Type\ntraefik.http.middlewares.immich-cors.headers.accessControlMaxAge=1728000\ntraefik.http.routers.immich.middlewares=immich-cors\n</code></pre> <p>Warning</p> <p>For security reasons, it's best to specify a list of URLs in <code>Access-Control-Allow-Origin</code> rather than using <code>*</code>.</p> <p>Note</p> <p>If you're coming from an internal IP, make sure your traffic is properly routed through the proxy rather than directly reaching the internal IP. To prevent SSL errors, you'll likely need a router that supports NAT reflection.</p>"},{"location":"media-sources/#wallpanel-configuration","title":"Wallpanel configuration","text":"<p>To access the Immich API, first generate an API key.</p> <p>Then you can configure WallPanel to use the Immich API. You need to set the <code>image_url</code> to <code>immich+&lt;your api url&gt;</code> and enter the API key in <code>immich_api_key</code>. With the config option <code>immich_shared_albums</code> (<code>true</code> / <code>false</code>) you can include or exclude shared albums. To restrict the media items to be retrieved to specific albums, you can configure a list of album names in <code>immich_album_names</code>. Alternatively you can configure a list of tag names in <code>immich_tag_names</code>. You can select media elements that contain certain people with the configuration option <code>immich_persons</code>. Or show immich memories by setting <code>immich_memories</code> to <code>true</code>. With the config option <code>immich_resolution</code> (<code>preview</code> / <code>original</code>) you can select the resolution of the images. </p> <p>Example using album names: <pre><code>image_url: immich+https://immich.your.domain/api\nimmich_api_key: 0vOb7EZ7YSajUQckMt6Cbnri8Ifzo5dlD9Q5hnnXlc\nimmich_shared_albums: false\nimmich_album_names:\n  - Tokio\n  - New York\nimmich_resolution: preview\n</code></pre></p> <p>Example using tag names: <pre><code>image_url: immich+https://immich.your.domain/api\nimmich_api_key: 0vOb7EZ7YSajUQckMt6Cbnri8Ifzo5dlD9Q5hnnXlc\nimmich_tag_names:\n  - Family\n  - Friends\nimmich_resolution: original\n</code></pre></p> <p>Example of media elements that contain certain persons: <pre><code>image_url: immich+https://immich.your.domain/api\nimmich_api_key: 0vOb7EZ7YSajUQckMt6Cbnri8Ifzo5dlD9Q5hnnXlc\nimmich_persons:\n  - Alice\n  - Bob\n  - [John, Jane]\n</code></pre> This will show media items containing either Alice, Bob or John and Jane.</p> <p>Example showing immich memories: <pre><code>image_url: immich+https://immich.your.domain/api\nimmich_api_key: 0vOb7EZ7YSajUQckMt6Cbnri8Ifzo5dlD9Q5hnnXlc\nimmich_memories: true\n</code></pre></p>"},{"location":"media-sources/#website-as-iframe","title":"Website as iframe","text":"<p>You can also display a website in an iframe. Just add the prefix <code>iframe+</code> to the URL of the website you want to show:</p> <p>For example: <pre><code>image_url: iframe+https://projects.sntosh.in/clock/\n</code></pre></p> <p>Info</p> <p>Not all websites can be used in an iframe. A website can set an X-Frame-Options HTTP header to prevent it from being used in an iframe.</p>"},{"location":"media-sources/#embed-external-content","title":"Embed external content","text":"<p>You can also embed external content in a HTML embed element. Simply prefix <code>embed+</code> to the URL of the source you want to embed:</p> <p>For example: <pre><code>image_url: embed+https://external.source.test/embed.pdf\n</code></pre></p>"},{"location":"other-configuration/","title":"Other configuration options","text":""},{"location":"other-configuration/#keep-screen-on-and-prevent-device-from-going-to-sleep","title":"Keep screen on and prevent device from going to sleep","text":"<p>If you set the configuration option <code>keep_screen_on_time</code> to a value greater than zero, the screen is prevented from dimming or locking for the specified time in seconds.</p> <p>If supported by the browser, this is done via the Screen Wake Lock API. The Screen Wake Lock API is usually only available when provided over HTTPS.</p> <p>If the screen lock API is not available, a short invisible video is played in a loop instead to keep the screen on. Due to browser limitations, you must interact with the screen once to enable the screen lock after the Dashboard page loads.</p>"},{"location":"quick-start/","title":"Quick Start","text":"<p>After Installation you can enable wallpanel for a dashboard. To do this, add a wallpanel configuration to your Home Assistant dashboard configuration yaml (raw config).</p> <ul> <li>Navigate to the dashboard.</li> <li>Click Overview in your sidebar.</li> <li>Click the three dots menu (top-right) and click on Edit Dashboard.</li> <li>Click the three dots menu again and click on Raw configuration editor.</li> <li>Add the <code>wallpanel</code> configuration above anything else.</li> </ul> <pre><code>wallpanel:\n  enabled: true\n  hide_toolbar: false\n  hide_sidebar: true\n  fullscreen: false\n  idle_time: 10\n</code></pre> <p>After saving and closing the dashboard configuration, WallPanel should now be active for this dashboard. The sidebar should be hidden and the screensaver should start after an idle time of 10 seconds.</p> <p>You can add a view that is displayed above the screensaver images. Simply refer to an existing view of the dashboard by its title or path. <pre><code>wallpanel:\n  enabled: true\n  cards: []\n  views:\n    - title: Wallpanel\n</code></pre></p> <p>Or add individual cards. You can copy the cards yaml from the raw configuration of any dashboard.</p> <pre><code>wallpanel:\n  enabled: true\n  views: []\n  cards:\n    - type: weather-forecast\n      entity: weather.open_meteo_home\n      forecast_type: daily\n</code></pre> <p>You can use Browser Mod to activate WallPanel on individual devices only. Replace <code>&lt;browser-id&gt;</code> with the Browser ID from Browser Mod.</p> <pre><code>wallpanel:\n  enabled: false\n  profiles:\n    device.&lt;browser-id&gt;:\n      enabled: true\n</code></pre> <p>In the section Additional Resources you can find some articles and videos about WallPanel.</p>"},{"location":"screensaver/","title":"Screensaver","text":"<p>WallPanel offers a screensaver that presents a media slideshow. Images, videos and websites are supported as media content.</p> <p>Tip</p> <p>Clicking on the far right side of the screen while the screensaver is active will display the next media item. Clicking on the left side will show the previous media item and reverse the playback order. You can also use a swipe gesture to switch between media items.</p>"},{"location":"screensaver/#screensaver-entity","title":"Screensaver entity","text":"<p>You can create an input_boolean helper in HA and set <code>screensaver_entity</code> to this entity id. When the screensaver starts this input_boolean will be set to <code>on</code> and to <code>off</code> when the screensaver stops. It is also possible to start and stop the screensaver by changing this input_boolean.</p> <p>You can use the screensaver entity in an automation to switch the screensaver on and off. For example, if you want to turn off the screensaver when a motion sensor detects movement, you can do this:</p> <ol> <li>Create an Switch Helper (input_boolean) in HA, name it <code>kitchen_wallpanel_screensaver</code> for example.</li> <li>Set the <code>screensaver_entity</code> in the wallpanel configuration: <pre><code>wallpanel:\n  screensaver_entity: input_boolean.kitchen_wallpanel_screensaver\n</code></pre></li> <li>Create an automation in HA that turns off the entity <code>input_boolean.kitchen_wallpanel_screensaver</code> to disable the screensaver: <pre><code>...\n- action: input_boolean.turn_off\n  target:\n    entity_id: input_boolean.kitchen_wallpanel_screensaver\n</code></pre></li> </ol> <p>Tip</p> <p>If you have several wallpanels, you should use a separate Switch Helper (input_boolean) for each wallpanel. You can use Configuration placeholders or Profiles for this.</p>"},{"location":"screensaver/#tracking-the-current-displayed-media-in-an-entity","title":"Tracking the current displayed media in an entity","text":"<p>You can create an input_text helper in HA and set the configuration option <code>image_url_entity</code> to this entity id. Make sure that the maximum length is not too short so that the image URL fits in (note that the default maximum length for input_text helpers created from the HA web interface is 100 characters, but you can create your own input_text in <code>configuration.yaml</code> of maximum length 255). In case the image path is too long for the helper, you will get a warning in HA logs (sounding like <code>Invalid value: ... (length range 0 - 100)</code>) and the entity will not get updated. When the screensaver changes the active image, the URL of the new image is stored in this entity.</p>"},{"location":"styling/","title":"Styling","text":"<p>You can customize the style of every WallPanel element.</p> <p>The most important element IDs are:</p> <ul> <li><code>wallpanel-screensaver-container</code></li> <li><code>wallpanel-screensaver-info-box</code></li> <li><code>wallpanel-screensaver-info-box-content</code></li> <li><code>wallpanel-screensaver-info-box-badges</code></li> <li><code>wallpanel-screensaver-info-box-views</code></li> <li><code>wallpanel-screensaver-image-background</code></li> <li><code>wallpanel-screensaver-image-info</code></li> <li><code>wallpanel-screensaver-image-overlay</code></li> <li><code>wallpanel-screensaver-overlay</code></li> </ul> <p>Use the <code>style</code> configuration attribute and add a key for the element ID for which you want to set style attributes.</p> <p>Example</p> <pre><code>style:\n  wallpanel-screensaver-overlay:\n    background: '#00000055'\n  wallpanel-screensaver-info-box-content:\n    background: '#ffffff'\n</code></pre> <p>The following CSS custom properties (variables) can be used to set styles for all added cards, the defaults are: <pre><code>style:\n  wallpanel-screensaver-info-box:\n    '--wp-card-width': 500px\n    '--wp-card-margin': 5px\n    '--wp-card-padding': 0px\n    '--wp-card-backdrop-filter': none\n</code></pre> You can add the <code>wp_style</code> attribute for individual cards and badges to set CSS styles as needed.</p> <p>Example</p> <pre><code>cards:\n  - type: weather-forecast\n    entity: weather.home\n    wp_style:\n      margin-top: 10px\n      '--ha-card-background': '#990000'\n</code></pre> <p>The CSS class <code>wallpanel-screensaver-image-info</code> can be used to style the image info layer.</p> <p>Example and default: <pre><code>style:\n  wallpanel-screensaver-image-info:\n    position: 'absolute'\n    bottom: '0.5em'\n    right: '0.5em'\n    padding: '0.1em 0.5em 0.1em 0.5em'\n    font-size: '2em'\n    background: '#00000055'\n    backdrop-filter: 'blur(2px)'\n    border-radius: '0.1em'\n</code></pre></p> <p>Another example: <pre><code>style:\n  wallpanel-screensaver-image-info:\n    position: 'absolute'\n    bottom: '0.5em'\n    right: '1.0em'\n    font-size: '2.5em'\n    -webkit-text-stroke: '0.02em #000'\n    color: '#ff9a00'\n    font-weight: '900'\n    font-family: 'monospace'\n</code></pre></p> <p>Here are some style examples:</p>"},{"location":"styling/#dark-style","title":"Dark style","text":"<p><pre><code>style:\n  wallpanel-screensaver-info-box:\n    '--wp-card-width': 450px\n    background-color: '#00000099'\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n  wallpanel-screensaver-info-box-content:\n    '--ha-card-background': none\n    '--ha-card-box-shadow': none\n    '--ha-card-border-width': 0px\n    '--primary-background-color': '#111111'\n    '--secondary-background-color': '#202020'\n    '--primary-text-color': '#e1e1e1'\n    '--secondary-text-color': '#9b9b9b'\n</code></pre> </p>"},{"location":"styling/#light-style","title":"Light style","text":"<p><pre><code>style:\n  wallpanel-screensaver-container:\n    background-color: '#333333dd'\n  wallpanel-screensaver-info-box:\n    '--wp-card-width': 450px\n    background-color: '#ffffff99'\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n  wallpanel-screensaver-info-box-content:\n    '--ha-card-background': none\n    '--ha-card-box-shadow': none\n    '--ha-card-border-width': 0px\n    '--primary-background-color': '#fafafa'\n    '--secondary-background-color': '#e5e5e5'\n    '--primary-text-color': '#212121'\n    '--secondary-text-color': '#727272'\n</code></pre> </p>"},{"location":"styling/#transparent-style","title":"Transparent style","text":"<p><pre><code>style:\n  wallpanel-screensaver-info-box:\n    '--wp-card-width': 450px\n  wallpanel-screensaver-info-box-content:\n    '--ha-card-background': none\n    '--ha-card-box-shadow': none\n    '--ha-card-border-width': 0px\n    text-shadow: -0.5px -0.5px 0 rgb(17, 17, 17), 0.5px -0.5px 0 rgb(17, 17, 17), -0.5px 0.5px 0 rgb(17, 17, 17), 0.5px 0.5px 0 rgb(17, 17, 17)\n    '--primary-text-color': '#ffffff'\n    '--secondary-text-color': '#dddddd'\n</code></pre> </p>"},{"location":"styling/#alternative-transparent-style-with-text-shadow","title":"Alternative transparent style with text shadow","text":"<pre><code>style:\n  wallpanel-screensaver-info-box-content:\n    '--ha-card-background': none\n    '--ha-card-box-shadow': none\n    '--ha-card-border-width': 0px\n    '--primary-text-color': '#ffffff'\n    '--secondary-text-color': '#dddddd'\n    filter: 'drop-shadow(0px 0px 3px rgb(17, 17, 17)) drop-shadow(0px 0px 8px rgb(30, 30, 30))'\n</code></pre>"},{"location":"styling/#alternative-transparent-style-with-card-background-blur","title":"Alternative transparent style with card background blur","text":"<p><pre><code>style:\n  wallpanel-screensaver-info-box-content:\n    background-color: '#0000'\n    '--ha-card-background': 'color-mix(in srgb, var(--card-background-color) 30%, #0000'\n    '--ha-card-backdrop-filter': blur(15px)\n</code></pre> </p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>If WallPanel does not work as expected, please check the following.</p>"},{"location":"troubleshooting/#known-problems-and-further-help","title":"Known problems and further help","text":"<p>Please check both open and closed issues for your problem. If you don\u2019t find a relevant issue, feel free to create a new one.</p> <p>If you're opening a new issue, please:</p> <ul> <li>Provide detailed steps to reproduce the issue.</li> <li>Specify the versions of Home Assistant and WallPanel you are using.</li> <li>Mention the device and browser or app you use to access the Home Assistant UI.</li> <li>Include your dashboard WallPanel configuration.</li> </ul> <p>Tip</p> <p>When sharing YAML code, enclose it within three backticks to maintain proper formatting and readability. For instance: <pre><code>```\nwallpanel:\n    enabled: true\n    hide_sidebar: true\n```\n</code></pre></p>"},{"location":"troubleshooting/#browser-console","title":"Browser Console","text":"<p>If you are using a browser to access the Home Assistant user interface, you can take a look at the browser console.</p> <p>Open the developer tools by pressing <code>&lt;F12&gt;</code> or <code>&lt;Ctrl&gt;+&lt;Shift&gt;+&lt;I&gt;</code> (<code>&lt;Command&gt;+&lt;Option&gt;+&lt;I&gt;</code> on macOS) and go to the <code>Console</code> tab.</p> <p>You should see a message like <code>\ud83d\uddbc\ufe0f Wallpanel version x.y.z</code> if WallPanel has started successfully.</p> <p>If not, please check if there are any error messages that give an indication of the problem.</p> <p>To confgure how much information WallPanel logs to the browser console, you can set the configuration option <code>log_level_console</code> to <code>error</code>, <code>warning</code>, <code>info</code> or <code>debug</code>.</p> <p>Example</p> <pre><code>wallpanel:\n  log_level_console: debug\n</code></pre>"},{"location":"troubleshooting/#home-assistant-system-log","title":"Home Assistant System Log","text":"<p>You can configure the log level used for logging to the Home Assistant System Log. By default, the original log level is used for the System Log. If you\u2019d like to map all log levels to a single target level, you can set the <code>system_target_log_level</code> option.</p> <p>Example</p> <pre><code>wallpanel:\n  log_level_system: debug\n  system_target_log_level: error\n</code></pre>"},{"location":"troubleshooting/#debug-mode","title":"Debug mode","text":"<p>If debug mode is enabled, an overlay is displayed in which status information is shown. There is a button to download a log file that contains information to help analyze problems. The debug mode can be activated and deactivated via the configuration option <code>debug</code>. You can also turn debug mode on and off by triple-clicking in the lower middle part of the screen while the screen saver is active.</p> <p>Example</p> <pre><code>wallpanel:\n  debug: true\n</code></pre>"},{"location":"troubleshooting/#error-dialogs","title":"Error dialogs","text":"<p>You can activate error dialogs by setting the configuration option <code>alert_errors</code> to <code>true</code>. If this option is activated, WallPanel displays every error message in an alert dialog.</p>"},{"location":"troubleshooting/#android-system-webview","title":"Android System WebView","text":"<p>If you're using an app like \"Home Assistant Companion\" or \"Fully Kiosk Browser\" on Android, make sure that Android System WebView is up to date.</p> <p>How to Update Android System WebView:</p> <ul> <li>Open the Google Play Store on your Android device.</li> <li>Search for \"Android System WebView\".</li> <li>Tap \"Update\" if an update is available.</li> </ul>"}]}